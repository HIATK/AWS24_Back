spring.application.name=MovieProject
server.port=5000

#datasource setting
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

spring.datasource.url=jdbc:mysql://awseb-e-rsb8skpdpp-stack-awsebrdsdatabase-0ulddwkoxado.czyaa8i2sgnf.ap-northeast-2.rds.amazonaws.com:3306/mvp?ServerTimezone=Asia/Seoul
spring.datasource.username=mvp
spring.datasource.password=mvp


# Log4j2 add setting
logging.level.org.springframework=info
logging.level.org.zerock=debug

# security logging setting
logging.level.org.springframework.security=trace

# DDL \uC124\uC815 \uBC29\uC2DD, none, create, create-drop, validate, update
spring.jpa.hibernate.ddl-auto=update
# sql-format \uD615\uD0DC\uB85C \uCFFC\uB9AC \uCD9C\uB825
spring.jpa.properties.hibernate.format_sql=true
# sql \uCD9C\uB825 \uBCF4\uC5EC\uC8FC\uAE30
spring.jpa.show-sql=true

spring.servlet.multipart.enabled=true
spring.servlet.multipart.location=${java.io.tmpdir}/images
spring.servlet.multipart.max-request-size=30MB
spring.servlet.multipart.max-file-size=10MB
# Image File Path
org.movieproject.file.path=${java.io.tmpdir}/images

# Oauth2
# kakao
# provider
spring.security.oauth2.client.provider.kakao.authorization-uri=https://kauth.kakao.com/oauth/authorize
spring.security.oauth2.client.provider.kakao.user-name-attribute=id
spring.security.oauth2.client.provider.kakao.token-uri=https://kauth.kakao.com/oauth/token
spring.security.oauth2.client.provider.kakao.user-info-uri=https://kapi.kakao.com/v2/user/me

# registration
spring.security.oauth2.client.registration.kakao.client-name=kakao
spring.security.oauth2.client.registration.kakao.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.kakao.redirect-uri=https://dev.moviepunk.p-e.kr/login/oauth2/code/kakao
spring.security.oauth2.client.registration.kakao.client-id=7737000ebeffe6da47c57ce150d6d735

spring.security.oauth2.client.registration.kakao.client-secret=DpSVp5N3u2Azyra2HJHBXOWiHqTkFpqV
spring.security.oauth2.client.registration.kakao.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.kakao.scope=profile_nickname, account_email

# google
# provider
spring.security.oauth2.client.provider.google.authorization-uri=https://accounts.google.com/o/oauth2/auth
spring.security.oauth2.client.provider.google.token-uri=https://oauth2.googleapis.com/token
spring.security.oauth2.client.provider.google.user-info-uri=https://www.googleapis.com/oauth2/v3/userinfo
spring.security.oauth2.client.provider.google.user-name-attribute=sub

# registration
spring.security.oauth2.client.registration.google.client-name=google
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.google.redirect-uri={baseUrl}/login/oauth2/code/google
spring.security.oauth2.client.registration.google.client-id=163734360847-akl09deld8it6jt5b7e159rld9ah5bif.apps.googleusercontent.com
spring.security.oauth2.client.registration.google.client-secret=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
spring.security.oauth2.client.registration.google.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.google.scope=openid, profile, email

# naver
# provider
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# registration
spring.security.oauth2.client.registration.naver.client-name=naver
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.naver.redirect-uri=https://dev.moviepunk.p-e.kr/login/oauth2/code/naver
spring.security.oauth2.client.registration.naver.client-id=DgfyVI9IdnhJfQQCP_3g
spring.security.oauth2.client.registration.naver.client-secret=vkjXMro3Pr
spring.security.oauth2.client.registration.naver.client-authentication-method=client_secret_post
spring.security.oauth2.client.registration.naver.scope=profile, email

jwt.secret=Gh+j5MzR6JFFA9Ln7ZoWlUs7h3oTrdSD6LxVcmGhH2UwNL9B7b8tpnIGQa6NqNBovPTu4zzW6s3qfwCn5H1zM7r6xBtG9H8bHsbNruC+QbUDT76xWLtX3eFK/XGjRPo
apiKey=427ac6c64a0876b843710cc982c41861

# S3
cloud.aws.credentials.access-key=${AWS_ACCESS_KEY}
cloud.aws.credentials.secret-key=${AWS_SECRET_KEY}
cloud.aws.s3.bucket=movieprofileimage
cloud.aws.region.static=ap-northeast-2
cloud.aws.stack.auto-=false
